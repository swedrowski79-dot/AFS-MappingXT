name: Code Style

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  code-style:
    name: PSR-12 Code Style Check
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, json
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP_CodeSniffer
        run: composer cs:check

      - name: Run PHPStan
        run: composer stan

      - name: Detect unused code
        run: php scripts/detect_unused_code.php

  asset-build:
    name: Asset Build Check
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for lockfile
        id: lock
        run: |
          if [ -f package-lock.json ] || [ -f yarn.lock ] || [ -f npm-shrinkwrap.json ]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js (with cache if lockfile present)
        if: steps.lock.outputs.found == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            npm-shrinkwrap.json
            yarn.lock

      - name: Setup Node.js (no cache)
        if: steps.lock.outputs.found != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Check if assets were built
        run: |
          if [ ! -f "assets/css/main.min.css" ]; then
            echo "Error: main.min.css was not built"
            exit 1
          fi
          if [ ! -f "assets/js/main.min.js" ]; then
            echo "Error: main.min.js was not built"
            exit 1
          fi
          echo "âœ“ All assets built successfully"
